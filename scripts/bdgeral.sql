-- MySQL Script generated by MySQL Workbench
-- 08/25/16 21:04:14
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bdste
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bdste` ;

-- -----------------------------------------------------
-- Schema bdste
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bdste` DEFAULT CHARACTER SET utf8 ;
USE `bdste` ;

-- -----------------------------------------------------
-- Table `bdste`.`categoria_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`categoria_veiculo` ;

CREATE TABLE IF NOT EXISTS `bdste`.`categoria_veiculo` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela categoria_veiculo',
  `nome` VARCHAR(45) NOT NULL COMMENT 'nome da categoria do veículo',
  `descricao` VARCHAR(100) NULL DEFAULT NULL COMMENT 'Descrição sobre categoria do veículo',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tabela de categorias de veiculos';


-- -----------------------------------------------------
-- Table `bdste`.`servico`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`servico` ;

CREATE TABLE IF NOT EXISTS `bdste`.`servico` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela  servico.',
  `id_categoria_veiculo` INT NOT NULL COMMENT 'Identificador/ chave estrangeira da tabela categoria_veiculo',
  `diaria` INT NOT NULL DEFAULT 1 COMMENT 'Número de diárias.',
  `preco_diaria` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor da diária',
  `preco_hora_extra` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor hora extra',
  `preco_km_extra` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor por KM extra',
  `preco_km_rodado` DECIMAL(15,3) NULL DEFAULT NULL COMMENT 'Valor KM rodado',
  `franquia_km` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Numero de KM da franquia',
  `hora_extra` TINYINT(1) NULL DEFAULT 1 COMMENT 'Permite hora extra (default Sim)',
  `km_livre` TINYINT(1) NULL DEFAULT 0 COMMENT 'Permite KM livre (default Não)',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_servico_categoria_veiculo`
    FOREIGN KEY (`id_categoria_veiculo`)
    REFERENCES `bdste`.`categoria_veiculo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
COMMENT = 'Tabela de serviços.';

CREATE INDEX `fk_servico_categoria_veiculo_idx` ON `bdste`.`servico` (`id_categoria_veiculo` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`empresa`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`empresa` ;

CREATE TABLE IF NOT EXISTS `bdste`.`empresa` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela empresa',
  `razao_social` VARCHAR(60) NOT NULL COMMENT 'Razão social da empresa',
  `nome_fantasia` VARCHAR(60) NOT NULL COMMENT 'Nome fantasia da empresa',
  `cnpj` VARCHAR(14) NOT NULL COMMENT 'Cnpj da empresa',
  `email_principal` VARCHAR(60) NOT NULL COMMENT 'email principal da empresa',
  `email_secundario` VARCHAR(60) NOT NULL COMMENT 'Identificador / chave estrangeira da tabela email',
  `id_endereco` INT NOT NULL COMMENT 'Identificador / chave estrangeira da tabela endereco.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tabela de empresas.';


-- -----------------------------------------------------
-- Table `bdste`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`cliente` ;

CREATE TABLE IF NOT EXISTS `bdste`.`cliente` (
  `id` INT NOT NULL COMMENT 'Identificador do registro de cliente.\n',
  `nome` VARCHAR(60) NOT NULL COMMENT 'Nome / Nome Fantasia do cliente.',
  `tipo` VARCHAR(1) NOT NULL COMMENT 'J - Pessoa Jurídica.\nF - Pessoa Física.',
  `cpfcnpj` VARCHAR(14) NOT NULL COMMENT 'CPF/CNPJ do cliente, indentendente do tipo de cliente o campo é o mesmo.',
  `razao` VARCHAR(60) NULL COMMENT 'Razão social, no caso de pessoa jurídica.',
  `email_principal` VARCHAR(60) NOT NULL COMMENT 'Email principal do cliente.',
  `email_secundario` VARCHAR(60) NULL COMMENT 'Email secundário do cliente.',
  `id_endereco` INT NOT NULL COMMENT 'Identificador do endereço do cliente.',
  `status` VARCHAR(1) NULL COMMENT 'S = Cliente Ativo\nN = Cliente Inativo',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bdste`.`colaborador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`colaborador` ;

CREATE TABLE IF NOT EXISTS `bdste`.`colaborador` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela.',
  `nome` VARCHAR(60) NOT NULL COMMENT 'Nome completo do colaborador.',
  `login` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Login do colaborador.',
  `senha` VARCHAR(30) NULL DEFAULT NULL COMMENT 'Senha referente ao login do colaborador.',
  `email_primario` VARCHAR(60) NOT NULL COMMENT 'Email primario do colaborador.',
  `email_secundario` VARCHAR(60) NULL COMMENT 'Email secundario do colaborador.',
  `passaporte` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'A tabela colaborador visa armazenar os dados das pessoas envolvidas na empresa.';


-- -----------------------------------------------------
-- Table `bdste`.`telefone`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`telefone` ;

CREATE TABLE IF NOT EXISTS `bdste`.`telefone` (
  `id_envolvido` INT NOT NULL COMMENT 'Identificador da tabela telefone referente ao envolvido (Empresa, Colaborador ou Clietne).',
  `tipo_envolvido` INT NOT NULL COMMENT 'Identificador do tipo de envolvido (1 - Empresa, 2 - Colaborador, 3 - Clientes)',
  `cod_pais` INT NULL COMMENT 'Código do país',
  `cod_area` INT NOT NULL COMMENT 'Código de área do numero de telefone',
  `numero` INT NOT NULL COMMENT 'Numero do telefone',
  `nome_contato` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Nome do contato',
  PRIMARY KEY (`id_envolvido`, `tipo_envolvido`),
  CONSTRAINT `fk_telefone_cliente`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`cliente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_telefone_colaborador`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`colaborador` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_telefone_empresa`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`empresa` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela de telefone dos envolvidos (1 - Empresa, 2 - Colaborador, 3 - Cliente)';


-- -----------------------------------------------------
-- Table `bdste`.`endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`endereco` ;

CREATE TABLE IF NOT EXISTS `bdste`.`endereco` (
  `id_envolvido` INT NOT NULL COMMENT 'Identificador da tabela telefone referente ao envolvido (Empresa, Colaborador ou Clietne).',
  `tipo_envolvido` INT NOT NULL COMMENT 'Identificador do tipo de envolvido (1 - Empresa, 2 - Colaborador, 3 - Clientes)',
  `endereco` VARCHAR(100) NOT NULL COMMENT 'Endereço completo fornecido pelo mapa.',
  `complemento` VARCHAR(60) NOT NULL COMMENT 'Complemento do endereço.',
  `cep` VARCHAR(20) NOT NULL COMMENT 'Código de CEP.',
  PRIMARY KEY (`id_envolvido`, `tipo_envolvido`),
  CONSTRAINT `fk_endereco_cliente`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`cliente` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_endereco_empresa`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`empresa` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_endereco_colaborador`
    FOREIGN KEY (`id_envolvido`)
    REFERENCES `bdste`.`colaborador` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela de endereços dos envolvidos (1 - Empresa, 2 - Colaborador, 3 - Cliente)';


-- -----------------------------------------------------
-- Table `bdste`.`tipo_veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`tipo_veiculo` ;

CREATE TABLE IF NOT EXISTS `bdste`.`tipo_veiculo` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela tipo_veiculo',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'descrição do tipo de veículo',
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Tabela dos tipos de veículos';


-- -----------------------------------------------------
-- Table `bdste`.`veiculo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`veiculo` ;

CREATE TABLE IF NOT EXISTS `bdste`.`veiculo` (
  `id` INT NOT NULL COMMENT 'Identificador do registro.',
  `id_tipo_veiculo` INT NOT NULL COMMENT 'identificador do tipo de registro',
  `placa` VARCHAR(10) NOT NULL COMMENT 'Placa do veículo.',
  `fabricante` VARCHAR(45) NOT NULL COMMENT 'Fabricante veículo.',
  `modelo` VARCHAR(45) NOT NULL COMMENT 'Modelo do veículo.',
  `id_categoria_veiculo` INT NOT NULL COMMENT 'Identificador da categoria do veículo.',
  `ano_fabricacao` DATE NOT NULL COMMENT 'Ano de fabricação do veículo.',
  `observacoes` VARCHAR(200) NULL COMMENT 'Demais observações.',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_veiculo_tipo`
    FOREIGN KEY (`id_tipo_veiculo`)
    REFERENCES `bdste`.`tipo_veiculo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_veiculo_categoria`
    FOREIGN KEY (`id_categoria_veiculo`)
    REFERENCES `bdste`.`categoria_veiculo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB
COMMENT = 'Tabela de veículos';

CREATE INDEX `fk_veiculo_tipo_veiculo_idx` ON `bdste`.`veiculo` (`id_tipo_veiculo` ASC);

CREATE INDEX `fk_veiculo_categoria_idx` ON `bdste`.`veiculo` (`id_categoria_veiculo` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`contrato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`contrato` ;

CREATE TABLE IF NOT EXISTS `bdste`.`contrato` (
  `id` INT NOT NULL,
  `id_cliente` INT NOT NULL COMMENT 'Identificador do cliente associado ao contrato.',
  `codigo` VARCHAR(5) NOT NULL COMMENT 'Codigo do contrato.',
  `data_assinatura` DATE NULL DEFAULT NULL COMMENT 'Data de assinatura do cliente.',
  `data_validade` DATE NULL DEFAULT NULL COMMENT 'Data de validade do contrato.',
  `status` INT NULL DEFAULT NULL COMMENT 'Ststus do contrato. (1 - Ativo, 2 - Inativo, 3 - Aguardando).',
  `tempo_min_solicitacao` INT NULL DEFAULT NULL COMMENT 'Número mínimo de munito de antecedência da chamada de uma viagem.',
  `dados_adicionais` VARCHAR(200) NULL DEFAULT NULL COMMENT 'Demais informações cabíveis ao contrato.',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_contrato_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `bdste`.`cliente` (`id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Tabela de define o contrato entre a empresa e o cliente que pretende trabalhar com contrato.';

CREATE INDEX `fk_cliente_idx` ON `bdste`.`contrato` (`id_cliente` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`servico_contrato`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`servico_contrato` ;

CREATE TABLE IF NOT EXISTS `bdste`.`servico_contrato` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela.',
  `id_contrato` INT NOT NULL COMMENT 'Identificador / chave estrangeira da tabela contrato.',
  `id_servico` INT NOT NULL COMMENT 'Identificador / chave estrangeira da tabela servico.\n',
  `diaria` INT NULL DEFAULT NULL COMMENT 'Numero de horas da diária.',
  `preco_diaria` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor de uma diária.',
  `preco_hora_extra` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor da hora extra.\n',
  `preco_km_extra` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor do KM extra.',
  `preco_km_rodado` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Valor do KM rodado.',
  `franquia_km` DOUBLE(15,3) NULL DEFAULT NULL COMMENT 'Numero de KM da franquia.',
  `hora_extra` TINYINT(1) NULL DEFAULT 1 COMMENT 'Permite hora extra (default Sim)',
  `km_livre` TINYINT(1) NULL DEFAULT 0 COMMENT 'Permite KM livre (Default Não)',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_servico_contratado_contrato`
    FOREIGN KEY (`id_contrato`)
    REFERENCES `bdste`.`contrato` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_servico_contratado_servico`
    FOREIGN KEY (`id_servico`)
    REFERENCES `bdste`.`servico` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_servico_contratado_contrato_idx` ON `bdste`.`servico_contrato` (`id_contrato` ASC);

CREATE INDEX `fk_servico_contratado_servico_idx` ON `bdste`.`servico_contrato` (`id_servico` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`Viagem`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`Viagem` ;

CREATE TABLE IF NOT EXISTS `bdste`.`Viagem` (
  `id` INT NOT NULL COMMENT 'identificador do registro de viagem.',
  `id_cliente` INT NOT NULL COMMENT 'Identificador do cliente da viagem.',
  `titulo` VARCHAR(60) NOT NULL COMMENT 'Título da viagem.',
  `descricao` VARCHAR(255) NULL COMMENT 'Descrição (Detalhes) da viagem.',
  `id_itinerario` INT NULL COMMENT 'Identeficador do itinerário da viagem.',
  `id_contrato` INT NULL COMMENT 'Identificador do contratro assiciado a viagem.',
  `id_veiculo` INT NULL COMMENT 'identificador do veículo associado a viagem.',
  `id_motorista` INT NULL COMMENT 'Identificador do colaborador do tipo Motorista que será associado a viagem.',
  `tipo` VARCHAR(1) NULL DEFAULT 'I' COMMENT 'I = Somente Ida\nV = Ida e Volta\n\nTipo define se a viagem é do tipo ida e volta ou se é somente ida.\n',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_viagem_colaborador`
    FOREIGN KEY (`id_motorista`)
    REFERENCES `bdste`.`colaborador` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_viagem_contrato`
    FOREIGN KEY (`id_contrato`)
    REFERENCES `bdste`.`contrato` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_viagem_veiculo`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `bdste`.`veiculo` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_viagem_colaborador_idx` ON `bdste`.`Viagem` (`id_motorista` ASC);

CREATE INDEX `fk_viagem_contrato_idx` ON `bdste`.`Viagem` (`id_contrato` ASC);

CREATE INDEX `fk_viagem_veiculo_idx` ON `bdste`.`Viagem` (`id_veiculo` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`tipo_colaborador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`tipo_colaborador` ;

CREATE TABLE IF NOT EXISTS `bdste`.`tipo_colaborador` (
  `id` INT NOT NULL COMMENT 'Identificador da tabela tipo_colaborador',
  `descricao` VARCHAR(45) NOT NULL COMMENT 'Descrição do tipo de colaborador. Ex: Motorista, Gerente.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `descricao_UNIQUE` ON `bdste`.`tipo_colaborador` (`descricao` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`colaborador_tipo_colaborador`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`colaborador_tipo_colaborador` ;

CREATE TABLE IF NOT EXISTS `bdste`.`colaborador_tipo_colaborador` (
  `id_colaborador` INT NOT NULL COMMENT 'Identificador / chave estrangeira da tabela colaborador.\n',
  `id_tipo_colaborador` INT NOT NULL COMMENT 'Identificador / chave entrangeira da tabela tipo_colaborador',
  PRIMARY KEY (`id_colaborador`, `id_tipo_colaborador`),
  CONSTRAINT `fk_colaborador_has_tipo_colaborador_colaborador1`
    FOREIGN KEY (`id_colaborador`)
    REFERENCES `bdste`.`colaborador` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_colaborador_has_tipo_colaborador_tipo_colaborador1`
    FOREIGN KEY (`id_tipo_colaborador`)
    REFERENCES `bdste`.`tipo_colaborador` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_colaborador_has_tipo_colaborador_colaborador1_idx` ON `bdste`.`colaborador_tipo_colaborador` (`id_colaborador` ASC);

CREATE INDEX `fk_colaborador_has_tipo_colaborador_tipo_colaborador1_idx` ON `bdste`.`colaborador_tipo_colaborador` (`id_tipo_colaborador` ASC);


-- -----------------------------------------------------
-- Table `bdste`.`itinerario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bdste`.`itinerario` ;

CREATE TABLE IF NOT EXISTS `bdste`.`itinerario` (
  `id` INT NOT NULL COMMENT 'Identificador do registro de itinerário.\n',
  `id_viagem` INT NOT NULL COMMENT 'Identificador da viagem associada a esta itinerário.\n',
  `local_origem` VARCHAR(100) NULL COMMENT 'Endereço de origem.',
  `descricao_origem` VARCHAR(255) NULL COMMENT 'Descrição ou detalhes do local de origem.',
  `data_hora_origem` DATETIME NULL COMMENT 'Data e hora de partida na origem da viagem.',
  `local_destino` VARCHAR(100) NULL COMMENT 'Endereço de destino.',
  `descricao_destino` VARCHAR(255) NULL COMMENT 'Descrição ou detalhes do local de destino.',
  `data_hora_destino` DATETIME NULL COMMENT 'Data hora de provável chegada ao destino.',
  `tipo` VARCHAR(1) NULL DEFAULT 'I' COMMENT 'I = itinerário de Ida\nV = itinerário de volta',
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_initerario_viagem`
    FOREIGN KEY (`id_viagem`)
    REFERENCES `bdste`.`Viagem` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_initerario_viagem_idx` ON `bdste`.`itinerario` (`id_viagem` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
